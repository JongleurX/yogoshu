- title (page_title = I18n.t('ui.search_header'))
.page-header
  %h1= page_title
  %br
  = form_tag entries_path, :method => :get do
    .input-append
      = autocomplete_field_tag :search, '', autocomplete_entry_term_entries_path, :size => 75, :class => "large", :placeholder => I18n.t('ui.search_prompt') 
      %button.btn.add-on#search-button
        %i.icon-search
  .clearfix.search-terms-box
    =I18n.t('ui.search_terms')
    %strong=params[:search] || I18n.t('ui.search_terms_none')

- if @entries.empty?
  =I18n.t('ui.search_no_results')
- else
  %table.table.entries-list.table-bordered{ :class => (logged_in? ? "logged-in" : "logged-out") + (manager? ? " manager" : " contributor")}
    %colgroup.col-index
    - @base_languages.each do 
      %colgroup.col-term
    - if logged_in? 
      %colgroup.col-added_by
      %colgroup.col-status
    - if manager?
      %colgroup.col-actions
    %thead
      %tr
        %th 
        - @base_languages.each do |lang|
          %th=I18n.t(lang.to_s).capitalize
        - if logged_in?
          %th=I18n.t('ui.entry_added_by')
          %th=I18n.t('ui.entry_status')
        - if manager?
          %th=I18n.t('ui.actions')
    %tbody
      - @entries.to_enum.with_index((@entries.current_page-1)*@entries.limit_value + 1).each do |entry,i|
        %tr
          %td
            = i
          - @base_languages.each do |lang|
            %td
              - Globalize.with_locale(lang) do
                - if (lang == @glossary_language)
                  = link_to highlight(entry.term, @tokens), entry
                - else
                  = highlight(entry.term, @tokens) unless entry.term.nil?
          - if logged_in?
            %td= link_to entry.user.name, entry.user
            %td
              - if entry.approved?
                %span.btn.btn-success.btn-mini=I18n.t('ui.status_approved')
              - else
                %span.btn.btn-warning.btn-mini=I18n.t('ui.status_unapproved')
          - if manager?
            %td
              = link_to sprite_img("icons-pencil"), edit_entry_path(entry), :title => I18n.t('ui.actions_edit')
              = link_to sprite_img("icons-cross"), entry, :confirm => I18n.t('ui.entry_actions_delete_conf'), :method => :delete, :title => I18n.t('ui.actions_delete')
              - if entry.approved?
                = link_to sprite_img("icons-thumb"), approve_entry_path(entry, :entry => { :approved => false}), :method => :post, :title => I18n.t('ui.entry_actions_unapprove')
              - else
                = link_to sprite_img("icons-thumb-up"), approve_entry_path(entry, :entry => { :approved => true}), :method => :post, :title => I18n.t('ui.entry_actions_approve')
  = paginate @entries